# --author-- Слинкин Кирилл Сергеевич

# Задача №1
# Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

l = [1, 2.45, 'qwer', {}]
for el in l:
    print(type(el))

# Задача №2
# Для списка реализовать обмен значений соседних элементов,
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

a = input('Заполните список через пробел: ').split()
m = 0
for el in range(int(len(a) / 2)):
    a[m], a[m + 1] = a[m + 1], a[m]
    m += 2
print(a)

# Задача №3
# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
a = int(input('Введите номер месяца в виде целого числа от 1 до 12 для определения его времени года: '))
while a >= 12 or a < 0:
    a = int(input('Введите номер месяца в виде целого числа от 1 до 12 для определения его времени года: '))

list_winter = [12, 1, 2]
list_spring = [3, 4, 5]
list_summer = [6, 7, 8]
list_autumn = [9, 10, 11]

if a in list_winter:
    print('Этот месяц относится к зиме')
elif a in list_spring:
    print('Этот месяц относится к весне')
elif a in list_summer:
    print('Этот месяц относится к лету')
elif a in list_autumn:
    print('Этот месяц относится к осени')

month_dict = {1: 'зиме',
              2: 'зиме',
              3: 'весне',
              4: 'весне',
              5: 'весне',
              6: 'лету',
              7: 'лету',
              8: 'лету',
              9: 'осени',
              10: 'осени',
              11: 'осени',
              12: 'зиме', }

print(f'Этот месяц относится к {month_dict.get(a)}')
# Нашел только такое громоздкое решение. Для упрощения и соединения воедино двух решений не понял,
# как делать поиск значения в словаре со списком.
# month_dict = {'зиме': [12, 1, 2],
#'весне': [3, 4, 5]
#            и т.д.}


# Задача №4
# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

a = str(input('Введите строку из нескольких слов через пробел: ')).split()
for i, element in enumerate(a):
    print(i + 1, element[:10:])

# Задача №5
# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [1, 5, 2, 9, 1]
a = int(input('Введите один новый элемент рейтинга: '))
my_list.append(a)
print(sorted(my_list, reverse=True))
print('Для остановки введите "9999"')
while a != 9999:
    a = int(input('Введите один новый элемент рейтинга: '))
    my_list.append(a)
    print(sorted(my_list, reverse=True))
    print('Для остановки введите "9999"')

# Не знаю, как лучше всего сделать оставновку цикла.
# С вводом определенного значения или как-то подругому

# Задача №6
# Реализовать структуру данных «Товары».
# Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и
# словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
#     (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
#     (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
#     (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
#     “название”: [“компьютер”, “принтер”, “сканер”],
#     “цена”: [20000, 6000, 2000],
#     “количество”: [5, 2, 7],
#     “ед”: [“шт.”]

# Времени не хватило. Если получится, то перед уроком постараюсь решить




